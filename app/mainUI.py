# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\main_App.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_ConnectWave(object):
    def setupUi(self, ConnectWave):
        ConnectWave.setObjectName("ConnectWave")
        ConnectWave.resize(1264, 769)
        ConnectWave.setStyleSheet("background-color: rgb(41, 41, 41);")
        self.Channels_selector = QtWidgets.QWidget(ConnectWave)
        self.Channels_selector.setGeometry(QtCore.QRect(10, 20, 291, 591))
        self.Channels_selector.setStyleSheet("background-color: rgb(82, 82, 82);\n"
"border-radius: 20px;")
        self.Channels_selector.setObjectName("Channels_selector")
        self.Channels_text = QtWidgets.QLabel(self.Channels_selector)
        self.Channels_text.setGeometry(QtCore.QRect(60, 10, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Mulish ExtraBold")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.Channels_text.setFont(font)
        self.Channels_text.setObjectName("Channels_text")
        self.Channels_info = QtWidgets.QWidget(ConnectWave)
        self.Channels_info.setGeometry(QtCore.QRect(320, 20, 931, 591))
        self.Channels_info.setStyleSheet("background-color: rgb(82, 82, 82);\n"
"border-radius: 20px;")
        self.Channels_info.setObjectName("Channels_info")
        self.Join_Meeting = QtWidgets.QWidget(ConnectWave)
        self.Join_Meeting.setGeometry(QtCore.QRect(10, 630, 651, 121))
        self.Join_Meeting.setStyleSheet("background-color: rgb(82, 82, 82);\n"
"border-radius: 25px;")
        self.Join_Meeting.setObjectName("Join_Meeting")
        self.Channels_text_2 = QtWidgets.QLabel(self.Join_Meeting)
        self.Channels_text_2.setGeometry(QtCore.QRect(20, 10, 351, 41))
        font = QtGui.QFont()
        font.setFamily("Mulish ExtraBold")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.Channels_text_2.setFont(font)
        self.Channels_text_2.setObjectName("Channels_text_2")
        self.lineEdit = QtWidgets.QLineEdit(self.Join_Meeting)
        self.lineEdit.setGeometry(QtCore.QRect(20, 60, 331, 41))
        font = QtGui.QFont()
        font.setFamily("Mulish ExtraBlack")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgb(129, 129, 129);\n"
"")
        self.lineEdit.setObjectName("lineEdit")
        self.Docs = QtWidgets.QWidget(ConnectWave)
        self.Docs.setGeometry(QtCore.QRect(680, 630, 561, 121))
        self.Docs.setStyleSheet("background-color: rgb(82, 82, 82);\n"
"border-radius: 25px;")
        self.Docs.setObjectName("Docs")
        self.Docs_btn = QtWidgets.QPushButton(self.Docs)
        self.Docs_btn.setGeometry(QtCore.QRect(30, 30, 491, 61))
        font = QtGui.QFont()
        font.setFamily("Muli ExtraBold")
        font.setPointSize(22)
        font.setBold(True)
        font.setItalic(True)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.Docs_btn.setFont(font)
        self.Docs_btn.setObjectName("Docs_btn")

        self.retranslateUi(ConnectWave)
        QtCore.QMetaObject.connectSlotsByName(ConnectWave)

    def retranslateUi(self, ConnectWave):
        _translate = QtCore.QCoreApplication.translate
        ConnectWave.setWindowTitle(_translate("ConnectWave", "Form"))
        self.Channels_text.setText(_translate("ConnectWave", "Channels"))
        self.Channels_text_2.setText(_translate("ConnectWave", "Enter meeting code :"))
        self.Docs_btn.setText(_translate("ConnectWave", "Documents"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ConnectWave = QtWidgets.QWidget()
    ui = Ui_ConnectWave()
    ui.setupUi(ConnectWave)
    ConnectWave.show()
    sys.exit(app.exec_())
